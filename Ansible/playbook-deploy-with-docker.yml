---
- name: Start docker image
  hosts: flask
  become: true
  tasks:
    - name: Check the old container if it exists
      community.docker.docker_container_info:
        name: flask-application-testing
      register: container_info
      ignore_errors: true
    - name: Remove if exist
      community.docker.docker_container:
        name: flask-application-testing
        state: absent
      when: container_info.container != []
    - name: Login into docker hub
      community.docker.docker_login:
        validate_certs: false
        registry_url: "https://harbor.ghtk-lab.local"
        username: "{{ harbor_username }}"
        password: "{{ harbor_password }}"
    - name: Start a container
      community.docker.docker_container:
        name: flask-application-testing
        state: started
        image: "harbor.ghtk-lab.local/ghtk-testing/flask-application-testing:{{ GIT_COMMIT }}"
        pull: true
        ports:
          - "5050:5000"
        env:
          FLASK_APP: run.py
          FLASK_CONFIG: development
    - name: Remove old images
      shell: |
        oldimage=`docker images | grep '<none>' | awk '{print $3}'`
        if [ -z "$oldimage" ]
        then
        echo "There is no old images found."
        else
        docker rmi ${oldimage} -f
        fi

      ignore_errors: yes
      become: true